{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Counter.svelte",
    "../../Ticker.svelte",
    "../../Tooltip.svelte",
    "../../Wage.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { fly } from 'svelte/transition';\n  import Wage from \"./Wage.svelte\";\n  import Counter from \"./Counter.svelte\";\n\n  let wage = \"\";\n  let rate = \"\";\n  let showCounter = false;\n\n  function start(evt) {\n    wage = evt.detail.wage;\n    rate = evt.detail.rate;\n    showCounter = true;\n  }\n</script>\n\n<style>\n  main {\n    height: 100vh;\n  }\n  #app {\n    display: flex;\n    min-height: 100%;\n    width: 100%;\n  }\n  .guillotine {\n    position: relative;\n    display: flex;\n    align-items: center;\n    height: 100vh;\n    width: 60%;\n    max-width: calc(.7 * 110vh);\n  }\n  .guillotine img {\n    position: fixed;\n    width: 60%;\n    max-width: calc(.7 * 110vh);\n  }\n  .info {\n    margin: 0 20px;\n    width: 50%;\n  }\n  h1 {\n    font-size: 72px;\n    margin-top: 10vh;\n    margin-bottom: 72px;\n    white-space: nowrap;\n  }\n  @media (max-width: 1300px) {\n    .guillotine img {\n      left: -80px;\n    }\n  }\n  @media (max-width: 1230px) {\n    .info {\n      margin-left: 0;\n    }\n    h1 {\n      font-size: 64px;\n    }\n  }\n   @media (max-width: 960px) {\n    h1 {\n      margin-top: 70px;\n      margin-bottom: 60px;\n    }\n    #app {\n      flex-direction: column-reverse;\n      align-items: center;\n      justify-content: flex-end;\n    }\n    .info {\n      width: 90%;\n      margin: 0;\n    }\n    .guillotine {\n      margin-top: 50px;\n      width: 100%;\n      max-width: unset;\n      height: unset;\n    }\n    .guillotine img {\n      position: relative;\n      width: 100%;\n      max-width: unset;\n      left: 0;\n    }\n  }\n\n  @media (max-width: 600px) {\n    h1 {\n      font-size: 48px;\n    }\n  }\n</style>\n\n<main>\n  <div id=\"app\">\n    <div class=\"guillotine\">\n      <img alt=\"\" src=\"./assets/guillotine_final_final_final.png\" />\n    </div>\n    <div class=\"info\">\n      <h1>What's your time<br>really worth?</h1>\n      {#if showCounter}\n        <div transition:fly=\"{{ delay: 200, x: 200, duration: 200 }}\">\n          <Counter wage={wage} rate={rate}/>\n        </div>\n        {:else}\n        <div transition:fly=\"{{ x: -200, duration: 200 }}\">\n          <Wage on:start={start}/>\n        </div>\n      {/if}\n    </div>\n  </div>\n</main>\n",
    "<script>\n  import Ticker from \"./Ticker.svelte\";\n  import Tooltip from \"./Tooltip.svelte\";\n\n  export let wage;\n  export let rate;\n\n  const SECONDS_IN_HOUR = 3600;\n  const SECONDS_IN_DAY = 86400;\n  const SECONDS_IN_YEAR = 31557600;\n  const WORK_HOURS_IN_YEAR = 2085;\n  const HOURS_IN_YEAR = 8760;\n  const BEZOS_2020 = 30600000000;\n  const BEZOS_NET = 150300000000;\n  const LABELS = [\"YEAR\", \"DAY\", \"HOUR\", \"MINUTE\", \"SECOND\"];\n\n  let seconds = 0;\n  let floatSeconds = 0;\n\n  import { onMount } from \"svelte\";\n\n  function formatTime(seconds) {\n    return [\n      parseInt(seconds / 60 / 60),\n      parseInt((seconds / 60) % 60),\n      parseInt(seconds % 60)\n    ]\n      .join(\":\")\n      .replace(/\\b(\\d)\\b/g, \"0$1\");\n  }\n\n  function formatToYear(seconds) {\n    return [\n      parseInt(seconds / SECONDS_IN_YEAR),\n      parseInt((seconds % SECONDS_IN_YEAR) / SECONDS_IN_DAY),\n      parseInt((seconds % SECONDS_IN_DAY) / SECONDS_IN_HOUR),\n      parseInt((seconds / 60) % 60),\n      parseInt(seconds % 60)\n    ].map(int => int.toString());\n  }\n\n  function timeToX(x, wage, rate, seconds) {\n    const wagePerYear = rate === \"hour\" ? wage * WORK_HOURS_IN_YEAR : wage;\n    const wagePerSecond = wagePerYear / SECONDS_IN_YEAR;\n\n    return formatToYear(x / wagePerSecond - seconds);\n  }\n\n  function hourly(wage, seconds) {\n    return formatCommas((wage * (seconds / SECONDS_IN_HOUR)).toFixed(2));\n  }\n\n  function yearly(wage, seconds) {\n    return formatCommas((wage * (seconds / SECONDS_IN_YEAR)).toFixed(2));\n  }\n\n  function formatCommas(numbers) {\n    const decimals = numbers.split(\".\")[1];\n    const numbersAsInt = parseInt(numbers).toString();\n    const numbersAsArray = numbersAsInt.split(\"\");\n\n    const formattedNumbers = numbersAsArray.reduce((acc, current, idx, src) => {\n      const comma = (src.length - idx) % 3 === 0 && idx > 0 ? \",\" : \"\";\n\n      return `${acc}${comma}${current}`;\n    }, \"\");\n\n    return decimals ? `${formattedNumbers}.${decimals}` : formattedNumbers;\n  }\n\n  function getPlural(number) {\n    return parseInt(number) === 1 ? \"\" : \"S\";\n  }\n\n  $: timer = formatTime(seconds);\n  $: youEarned =\n    rate === \"hour\" ? hourly(wage, floatSeconds) : yearly(wage, floatSeconds);\n  $: jeffEarned = yearly(BEZOS_2020, floatSeconds);\n  $: jeffEarnedBySeconds = BEZOS_NET + parseFloat(yearly(BEZOS_2020, seconds));\n  $: timeToMillion = timeToX(1000000, wage, rate, seconds);\n  $: timeToBillion = timeToX(1000000000, wage, rate, seconds);\n  $: timeToJeff = timeToX(jeffEarnedBySeconds, wage, rate, seconds);\n\n  onMount(() => {\n    setInterval(() => {\n      floatSeconds = parseFloat((floatSeconds += 0.2).toFixed(1));\n\n      if (floatSeconds % 1 === 0) {\n        seconds = seconds += 1;\n      }\n    }, 200);\n  });\n</script>\n\n<style>\n  .label {\n    margin-bottom: 12px;\n    font-size: 16px;\n    text-transform: uppercase;\n  }\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n  ul.main-counters {\n    margin-bottom: 50px;\n  }\n  li {\n    margin-bottom: 28px;\n  }\n  .number {\n    font-weight: bold;\n    font-size: 40px;\n    line-height: 47px;\n  }\n  .numbers-with-units {\n    display: flex;\n    flex-wrap: wrap;\n    flex-basis: 50%;\n  }\n  .secondary-counters .number {\n    display: flex;\n    align-items: center;\n    margin-right: 32px;\n    margin-bottom: 5px;\n    font-size: 24px;\n    line-height: 24px;\n  }\n  .secondary-counters .number:last-of-type {\n    margin-right: 0;\n  }\n  .unit-label {\n    font-size: 16px;\n    line-height: 19px;\n    margin-left: 6px;\n    margin-top: 2px;\n    text-transform: uppercase;\n    font-weight: normal;\n    color: #808080;\n  }\n</style>\n\n<ul class=\"main-counters\">\n  <li>\n    <div class=\"label\">TIME ELAPSED</div>\n    <div class=\"number\">\n      <Ticker digits={timer} />\n    </div>\n  </li>\n\n  <li>\n    <div class=\"label\">\n      YOU'VE EARNED\n      <Tooltip title=\"BASE WAGE:\" {rate} wage={formatCommas(wage.toString())} />\n    </div>\n    <div class=\"number\">\n      <Ticker digits={`$${youEarned}`} />\n    </div>\n  </li>\n\n  <li>\n    <div class=\"label\">\n      JEFF'S EARNED\n      <Tooltip\n        title=\"2020 EARNINGS:\"\n        wage={formatCommas(BEZOS_2020.toString())} />\n    </div>\n    <div class=\"number\">\n      <Ticker digits={`$${jeffEarned}`} />\n    </div>\n  </li>\n\n</ul>\n\n<ul class=\"secondary-counters\">\n  <li>\n    <div class=\"label\">TIME TO $1M</div>\n    <div class=\"numbers-with-units\">\n      {#each timeToMillion as unit, index}\n        <div class=\"number\">\n          <Ticker digits={formatCommas(unit)} />\n          <span class=\"unit-label\">{`${LABELS[index]}${getPlural(unit)}`}</span>\n        </div>\n      {/each}\n    </div>\n  </li>\n\n  <li>\n    <div class=\"label\">\n      TIME TO JEFF\n      <Tooltip title=\"BEZOS WORTH:\" wage={formatCommas(BEZOS_NET.toString())} />\n    </div>\n    <div class=\"numbers-with-units\">\n      {#each timeToJeff as unit, index}\n        <div class=\"number\">\n          <Ticker digits={formatCommas(unit)} />\n          <span class=\"unit-label\">{`${LABELS[index]}${getPlural(unit)}`}</span>\n        </div>\n      {/each}\n    </div>\n  </li>\n</ul>\n",
    "<script>\nexport let digits;\nconst NUMBERS = [...Array(10).keys()];\n\n$: stringNumber = digits.toString().split('').reverse();\n\n</script>\n\n<style>\n.digit {\n  display: inline-block;\n}\n.ticker-container {\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: flex-end;\n  height: 1em;\n  line-height: 1em;\n  overflow-y: hidden;\n}\n.ticker {\n  display: flex;\n  flex-direction: column;\n  transition: transform 300ms cubic-bezier(0.65, 0.05, 0.36, 1);\n}\n</style>\n\n\n<span class=\"ticker-container\">\n  {#each stringNumber as char, index}\n    {#if parseInt(char) || char === \"0\"}\n      <span class=\"digit\">\n        <div class=\"ticker\" style=\"transform: translateY(-{char}em)\">\n          {#each NUMBERS as n}\n            <span>{n}</span>\n          {/each}\n        </div>\n      </span>\n    {:else}\n     <span>{char}</span>\n    {/if}\n  {/each}\n</span>\n",
    "<script>\n  export let title;\n  export let rate;\n  export let wage;\n\n  let showTip = false;\n\n  $: displayRate = rate === \"hour\" ? \"HR\" : \"YR\";\n</script>\n\n<style>\n  .wrapper {\n    position: relative;\n  }\n  .tip {\n    position: absolute;\n    bottom: 30px;\n    left: 50%;\n    min-width: 90px;\n    padding: 11px;\n    margin: auto;\n    text-align: center;\n    transform: translateX(-50%);\n    background: #fff;\n    border: 1px solid #000000;\n  }\n  .tip::after {\n    position: absolute;\n    bottom: -8.6px;\n    content: \"\";\n    width: 15px;\n    height: 15px;\n    background: #fff;\n    transform: translateX(-50%) rotate(45deg);\n    border-right: 1px solid #000;\n    border-bottom: 1px solid #000;\n  }\n  .title {\n    font-weight: 300;\n    font-size: 12px;\n    line-height: 14px;\n    white-space: nowrap;\n  }\n  .rate {\n    font-weight: bold;\n    font-size: 16px;\n    line-height: 19px;\n    white-space: nowrap;\n    margin-top: 3px;\n  }\n</style>\n\n<span class=\"wrapper\">\n  {#if showTip}\n    <div class=\"tip\">\n      <div class=\"title\">{title}</div>\n      <div class=\"rate\">\n        ${wage}{#if rate}/{displayRate}{/if}\n      </div>\n    </div>\n  {/if}\n  <img\n    on:mouseover={() => {\n      showTip = true;\n    }}\n    on:mouseleave={() => {\n      showTip = false;\n    }}\n    alt=\"tooltip\"\n    src=\"../assets/tooltip.svg\" />\n</span>\n",
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n  let wage = \"\";\n  let rate = \"\";\n\n  function setRate(type) {\n    rate = type;\n  }\n\n  function formatWage() {\n    if (wage.split(\".\").length > 2) {\n      return wage.split(\".\").slice(0, 2).join(\".\")\n    }\n    return wage.replace(/([^\\d\\.])/g,'');\n  }\n\n  function start() {\n    const strippedWage = formatWage();\n    if (wage.length === 0 || rate.length === 0 || strippedWage.length === 0) return;\n\n    dispatch('start', { rate: rate, wage: parseFloat(strippedWage, 10) });\n  }\n</script>\n\n<style lang=\"scss\">\n  h2 {\n    font-size: 32px;\n    margin-bottom: 24px;\n  }\n  .wage {\n    padding: 32px;\n    padding-left: 0;\n    max-width: 362px;\n    background: #fff;\n  }\n  .wage-input {\n    position: relative;\n    padding-top: 6px;\n    padding-bottom: 6px;\n    font-size: 24px;\n    border: 1px solid #000000;\n  }\n  .wage-input input {\n    box-sizing: border-box;\n    width: calc(100% - 40px);\n    margin-left: 30px;\n    font-size: 24px;\n  }\n  .wage-input::before {\n    content: \"$\";\n    position: absolute;\n    left: 12px;\n    margin-top: 1px;\n    font-weight: bold;\n  }\n  button {\n    font-size: 16px;\n    text-transform: uppercase;\n  }\n  .rate-input {\n    display: flex;\n    margin-top: 8px;\n    margin-bottom: 32px;\n  }\n  .rate-input button {\n    width: 100%;\n    padding: 8px 35px;\n    background: #fff;\n    border: 1px solid #000000;\n  }\n  .rate-input button.active {\n    cursor: default;\n  }\n  .rate-input button:hover,\n  .rate-input button.active {\n    background: #000;\n    color: #fff;\n    border: 1px solid #000000;\n  }\n  .rate-input button:first-of-type {\n    margin-right: 8px;\n  }\n  .start {\n    display: block;\n    width: 100%;\n    padding: 12px 0;\n    color: #fff;\n    background: #000000;\n    border: 1px solid #000000;\n    font-size: 16px;\n  }\n\n  @media (max-width: 960px) {\n    .wage {\n      max-width: unset;\n      padding: unset;\n    }\n  }\n</style>\n\n<div class=\"wage\">\n  <h2>Enter your wage</h2>\n  <div class=\"wage-input\">\n    <input bind:value={wage} min=\"0\" placeholder=\"24,000\" />\n  </div>\n  <div class=\"rate-input\">\n    <button\n      on:click={() => setRate('hour')}\n      class={rate === 'hour' ? 'active' : ''}>\n      PER HOUR\n    </button>\n    <button\n      on:click={() => setRate('year')}\n      class={rate === 'year' ? 'active' : ''}>\n      PER YEAR\n    </button>\n  </div>\n  <button on:click={start} class=\"start\">START</button>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAiBE,IAAI,8BAAC,CAAC,AACJ,MAAM,CAAE,KAAK,AACf,CAAC,AACD,IAAI,8BAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,AACb,CAAC,AACD,WAAW,8BAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,AAC7B,CAAC,AACD,0BAAW,CAAC,GAAG,eAAC,CAAC,AACf,QAAQ,CAAE,KAAK,CACf,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,AAC7B,CAAC,AACD,KAAK,8BAAC,CAAC,AACL,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,KAAK,CAAE,GAAG,AACZ,CAAC,AACD,EAAE,8BAAC,CAAC,AACF,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,CACnB,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,MAAM,AAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AAC1B,0BAAW,CAAC,GAAG,eAAC,CAAC,AACf,IAAI,CAAE,KAAK,AACb,CAAC,AACH,CAAC,AACD,MAAM,AAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AAC1B,KAAK,8BAAC,CAAC,AACL,WAAW,CAAE,CAAC,AAChB,CAAC,AACD,EAAE,8BAAC,CAAC,AACF,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC,AACA,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,EAAE,8BAAC,CAAC,AACF,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,IAAI,8BAAC,CAAC,AACJ,cAAc,CAAE,cAAc,CAC9B,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,QAAQ,AAC3B,CAAC,AACD,KAAK,8BAAC,CAAC,AACL,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,CAAC,AACX,CAAC,AACD,WAAW,8BAAC,CAAC,AACX,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,KAAK,AACf,CAAC,AACD,0BAAW,CAAC,GAAG,eAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,IAAI,CAAE,CAAC,AACT,CAAC,AACH,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,EAAE,8BAAC,CAAC,AACF,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC;ACED,MAAM,4BAAC,CAAC,AACN,aAAa,CAAE,IAAI,CACnB,SAAS,CAAE,IAAI,CACf,cAAc,CAAE,SAAS,AAC3B,CAAC,AACD,EAAE,4BAAC,CAAC,AACF,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,AACX,CAAC,AACD,EAAE,cAAc,4BAAC,CAAC,AAChB,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,EAAE,4BAAC,CAAC,AACF,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,OAAO,4BAAC,CAAC,AACP,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,mBAAmB,4BAAC,CAAC,AACnB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,GAAG,AACjB,CAAC,AACD,iCAAmB,CAAC,OAAO,cAAC,CAAC,AAC3B,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,YAAY,CAAE,IAAI,CAClB,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,iCAAmB,CAAC,qBAAO,aAAa,AAAC,CAAC,AACxC,YAAY,CAAE,CAAC,AACjB,CAAC,AACD,WAAW,4BAAC,CAAC,AACX,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,GAAG,CAChB,UAAU,CAAE,GAAG,CACf,cAAc,CAAE,SAAS,CACzB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,OAAO,AAChB,CAAC;ACnIH,MAAM,cAAC,CAAC,AACN,OAAO,CAAE,YAAY,AACvB,CAAC,AACD,iBAAiB,cAAC,CAAC,AACjB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,WAAW,CAC3B,eAAe,CAAE,QAAQ,CACzB,MAAM,CAAE,GAAG,CACX,WAAW,CAAE,GAAG,CAChB,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AAC/D,CAAC;ACbC,QAAQ,cAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACD,IAAI,cAAC,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAC3B,CAAC,AACD,kBAAI,OAAO,AAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,MAAM,CACd,OAAO,CAAE,EAAE,CACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,WAAW,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC,CACzC,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC5B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAC/B,CAAC,AACD,MAAM,cAAC,CAAC,AACN,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,GAAG,AACjB,CAAC;ACtBD,EAAE,4BAAC,CAAC,AACF,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,KAAK,4BAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,YAAY,CAAE,CAAC,CACf,SAAS,CAAE,KAAK,CAChB,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,WAAW,4BAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,WAAW,CAAE,GAAG,CAChB,cAAc,CAAE,GAAG,CACnB,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAC3B,CAAC,AACD,yBAAW,CAAC,KAAK,cAAC,CAAC,AACjB,UAAU,CAAE,UAAU,CACtB,KAAK,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CACxB,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,uCAAW,QAAQ,AAAC,CAAC,AACnB,OAAO,CAAE,GAAG,CACZ,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,IAAI,CACV,UAAU,CAAE,GAAG,CACf,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,MAAM,4BAAC,CAAC,AACN,SAAS,CAAE,IAAI,CACf,cAAc,CAAE,SAAS,AAC3B,CAAC,AACD,WAAW,4BAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,GAAG,CACf,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,yBAAW,CAAC,MAAM,cAAC,CAAC,AAClB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAC3B,CAAC,AACD,yBAAW,CAAC,MAAM,OAAO,cAAC,CAAC,AACzB,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,yBAAW,CAAC,oBAAM,MAAM,CACxB,yBAAW,CAAC,MAAM,OAAO,cAAC,CAAC,AACzB,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAC3B,CAAC,AACD,yBAAW,CAAC,oBAAM,cAAc,AAAC,CAAC,AAChC,YAAY,CAAE,GAAG,AACnB,CAAC,AACD,MAAM,4BAAC,CAAC,AACN,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,KAAK,4BAAC,CAAC,AACL,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,KAAK,AAChB,CAAC,AACH,CAAC"
}